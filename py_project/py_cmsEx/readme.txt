----------------------------------------------------
py_cmsEx : 구조 개선, 요청 및 응답에 대한 사전/사후 처리
          , 쿠키 도입, 디비 연결 및 종료 개선 처리
          , API 기능 추가(JSON 기반), 블루프린트 (고민)
-----------------------------------------------------
static : 정적 폴더, css, js, image 파일업로드 저장 위치
- 라우트 없이 url이 자동으로 부여되어서 
  http://ip:port/static/xxx.xx
- 정적 폴더를 변경할 수 없는 가? ->가능하다
-----------------------------------------------------
templates : render_template()에서 사용하는 html 파일이 위치함.
---------------------------------------------------------
run.py : 프로그램 시작점, 서버의 시작점 
---------------------------------------------------
session : 사이트에 로그인한 유저의 특정 정보를 저장하여 서버가
관리한다. 세션이 유지되는 도안 로그인한 것으로 간주하고
특정 페이지 접근 허락한다.동접이 크면 db쪽에 저장하지만, 대량 유저가
동접하는 규모가 아니면, 서버 메모리에 저장하여 관리한다.
#세션이 없어도 접근 가능한 페이지는 오직 로그인
-----------------------------------------------------------
<->쿠키 :는 유저 브라우저에 저장하는 정보(대표적인 것 - 아이디 저장)
-------------------------------------------------------------
파일 업로드 : ~/bbs/upload ->get->폼
             ~/bbs/upload ->post->등록
             ~/bbs        ->get-> 등록된 글 리스트
---------------------------------------------------------------
1) service > controlloer > __init__.py에
   blueprint 정의
2) blueprint 등록 
    from service.controller import bp_user,bp_epl,bp_bbs

    app.register_blueprint(bp_bbs,url_prefix='/bbs')

3) service >controller>bbs.py  생성
 service >__init__.py 에 bbs import
 from service.controller import user,epl,bbs

 4) 테이블 생성 및 sql 테스트
 -- 전체 게시물 가져오기
select *
from tbl_bbs order by id desc;
-- 최신순 정렬


-- 게시물 하나 추가하기 
insert into tbl_bbs (title,content,`file`,writter,regdate)
values('제목','내용','/upload/img/logo.png','1', now() );

5) service >model > dbMgr.py에 멤버 함수 2개 추가하기
--------------------------------------
-- 마리다 DB 설치
-- 설정 파일 : my.ini(윈도우), my.cnf(맥,리눅스)(환경설정파일)
-->우리가 만든 환경설정파일처럼 마리아디비가 실행될때 저 설정을 따라서 실행


-- 마리아 db 접속 
>> mysql -u root -p 비밀번호
//root로 접속

--권한
1)전체 적용 관리자 권환
2)데이터 베이스 테이블, 컬럼 단위 권환
3)기타 부가 권한 

-- 사용자 생성
계정만들기
>> create user 'guest'@'localhost' :디비가 설치된 로컬에서만 사용될 수있는 계정
identified by '811201';

create user 'guest'@'%' identified by '811201'; 모든 ip에서 사용 가능
            '사용자'@'대역'
-- 접근할 수있는 대역 (ip,도메인)을 기술할 수 있다.
%는 모든 ip
%.naver.com
23.5.3.%

-- 권한 부여,제거,보기
>> grant <권한> on <데이터베이스> to 사용자
>>grant all on *.* to 'guest'@'%';
*.*는 모든 db를 의미

-- 권한 제거 
revoke all, grant option on *.* from 'guest'@'%';

-- 권한 보기
>>show grants for 'guest'@'%';

-- 비번 변경
set password for 'guest'@'%'=password('12345');

-- 사용자 제거
>>drop user 'guest'@'%'
--------------------------------------------------------------------------------------
1. aws 세팅하기
-EC2
 1)서비스 > EC2 > 인스턴스 생성 > 프리티어 체크
 2)UBUNTU 16 선택 -> 7단계 진행 -> 생성
 3)생성시 pem 파일(최초일때는 신규, 이미 있으면 기존 or
신규) 하여 반드시 다운롣 한다 !! -> 이파일이 없으면
서버에 접속 불가

4) 서비스 >EC2> 실행중인 인스턴스 >여기서 운용중인
서버를 확인할 수 있고, 인스턴스 우클릭하면 (연결,... 가동,
중지, 재부팅, 종료(완전제거))

5) 인스턴스 하단 정보에 퍼블릭 IP 확인(외부에서 접속하는
IP), 퍼블릭 DOMAIN 도 동일 기능

6)서비스>EC2> 시큐리티 그룹(보안 그룹)>해당 그룹을 클릭
>인바운드 규칙 편집>TCP : HTTP(80), 5000번 추가
>외부에서 본 서버로 접근할때 진입이 가능한 포트를
오픈 해줌

7) putty ->
 import key
 save private key

IPv4 퍼블릭 IP
13.125.229.250

db : pythondb.ca43kwx7uqiw.ap-northeast-2.rds.amazonaws.com

-RDS
1)서비스 >RDS>프리티어 >마리다 디비 세팅
2) 인스턴스명, 디비명, 계정, 비번 설정

-하이디 sql
: 
1.앤드포인트 긁어오기
2. 사용자 root
3. 비번입력 진경12!
프로젝트 관련 기술 검토.
-- gui 생성(로그인 같은 것)
-> Qt5 (라이센스 주의)
-> tkinter(파이썬 자체 제공)

--솔루션 배포
-> 제품화 하여 고객들 판매등 -->소스가 은닉
->*.py ->*.exe or *.msi or *.dmg  or *.pkg
-> py2exe(윈도우)//py2app,cx_Freese( 맥, 윈도우)
-> pip install cx_Freese

솔루션 패키징 과정 
1)python 설치 (3.6. 이ㅏ 설치)
2) 개발(사용한 모듈 및 프로그램 체크)
예를 들어 Qt5에서 로그인하고 selenium을 통해 크롤링하는 프로그램<->flask 기반으로 서버
제공(인증 api 제공)이라면 
파일명 : run.py
ico(실행파일아이콘)
같이 패키징되는 파일 :  chromedriver.exe

3) pip install ex_Freeze
-----------------------------------------------------------
리눅스에 nginx + flask 연동하여 서비스 운영하기
------------------------------------------------------------
-- ubuntu에서 설치하는 명령 >> apt-get
-- 루트 권한 획득
-- sudp su  
------------------------------------------
bbs/
home -> 게시판 리스트
글쓰기 -> 폼 -> 작성하면 리스트에 뜨기
리스트클릭-> get방식으로 작성한 홈페이지 만들기

eXERD - 무료 데이터베이스 설계 툴

데이터 베이스 
식별관계 - 두 테이블의 한 컬럼이 두 개의 테이브 모두에서 가장 중요한 키( foreign키면서 primary)

비식별관계- 
관계
1. 1대 1 a테이블과 b테이블 합칠수가 잇음
2. 1대 다 =>중요
->점선관계 :pk가 다른 테이블에서 일발컬럼일때
->실선관계 :pk컬럼이 다른 테이블에서도 pk컬럼일때 
3. 다 대 다 - 없음 (중매가 있어야함 )