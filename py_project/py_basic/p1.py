print("hello ")
# 주석 comment : 코드를 설명하는 문장 - 한줄인 경우
"""
두 줄 이상인 경우 따옴표 세번
"""
#파이썬 기초 순서
"""
1.  단일 데이터 관련
 -수치형 (정수,부동소수,8~10~16진수,....)
 -문자열 ("",'')
2. 여러개 데이터 관련, 연속 데이터, 시퀀스 데이터
-리스트
-튜플
-딕셔너리
-집합

3. 블린 (참/거짓)
-블린형
4.변수 메모리등 참조 관련사항(클래스 이후 체크사항)
-참조 카운트 등 
"""
print("="*70)
#수치 형 값 변수에 담기
#문자의 끝에 아무거도 쓰지 않는다 ( 타 언어는 ;-여러문장을 한줄 에 표현할때 사용)
# a라는 변수는 10이라는 객체의 주소를 가르키고 있다.
a = 10
print(a,type(a))
a=1.1
print(a,type(a))
#파이썬의 변수는 : 변수 명 = 값(실제는 주소 값
#변수의 타입은 : 값이 세팅될때(주소가 세팅될때 ) 결정된다
#타입 추론으로 타입을 결정한다
#변수명 :알파벳, _, (숫자, 특수문자 안됨)
#자바 int a=10;
#관습 - 단어를 이어서 사용할 경우 글자 대문자, 첫글자 소문자
#상수 - 대문자 사용

###################################################################
# 수치형 : 숫자로 정의된 자료형
# 정수 
# 실수
############################
# 8 진수 : 0o12
# 16 진수 :0xFF, (0~9, A(10)~F(15)) => 0x가 붙음 
###################################################################
print("="*70)
a=128
print(a)
#연산 과정 
# + * - /
#나머지 획득
#print(a%b)
#몫 //
#print(11%b)
#제곱근 2의 3제곱근
#print(2**3)

########실습
a=90; b=86; c=100
print((a+b+c)/3)

#문자열
#2개의 표현을 나눠 혼용할 수있다
a='abcdef"kkk"ppiow'
print(a)
#이스케이프 문자로 동일한 기호를 문자열 내부에서 사용 가능
a='abcdef\'kkk\'ppiopw'
print(a)
a="""
dkdkdddjskl
dfkljdls
dkjsld
"""
print(a)

#ctrl + shift +b 눌러서 tasks.json 눌러서"
'''
  "tasks": [
        {
            "label": "python 실행",
            "type": "shell",
            "command": "python",
            "args": [
                "${file}"
            ]
'''
#######################################
#문자열 더하기
a='123'
b='567'
print(a+b)

# 문자열 반복 
print("="*70)
##########################################
#인덱싱 indexing
a="0123456789"
#인덱싱: 문자열에서 특정 문자를 획득하는 방식 -a라는 변수에서 1을 출력하시오.- 인덱싱 계산은 정방향일 경우 0 부터 따진다
# 인덱싱은 가까운 쪽에서 해결한다 
print(a[1])
print(a[len(a)-1])
#문법 : 변수[순서(정방향, 역방향 둘다 가능)]
#역방향은 -1 부터 시작 -1,-2,-3 ~~~~
print(a[-1]) #이런 식 ~
###################################################
#범위에 해당되는 데이터 획득 ->슬라이싱
url="https://www.inflearn.com/members/sand116/dashboard/"
# 변수[시작인데스 : 끝인덱스] 변수 a의 값중에서 1~8까지 출력하시오 
print(a)
#시작 범위 및 끝 범위가 없으면 복사와 동일한 결과 print(a[:])
# 변수 a의 값 중에서 1~8까지 출력하시오
print(a[1:-1])
#0123 출력하시오 
print(a[:4]) # a[3]까지 추출 

#포맷팅 - 어떤 데이터를 문자열과 결합하여 특정 형태로 표현하는 방식
a=1
b=2
print('%d+%d=%d' %(a,b,a+b))
#출력하고자 하는 변수의 타입과 포멧팅의 표현이 일치하지 않으면 부정확하게 나오거나,오류를 출력할 수도 있다.
#모던하게 문제 없이 받자
print('%s/%s=%s' %(a,b,a/b))
#인덱스로 포멧팅을 구성하고 싶다
print('{0}/{1}={result}' .format(a,b,result=a/b))
#######################################################################################
#문자열 지원함수들 (특정 기능하는)
a="0123456789"
print('문자열의 특정 문자 개수?',a.count('1')) #a라는 문자열에 1이라는 것이 몇 개 있나?
##############################포멧팅에서 자리칸 표현-20칸에서 문자열을 배치하라
print('[%20s]'%"12345")
print('[%-20s]'%"12345")
#소수부를 자리수를 기준으로 컷팅할 때는 반올림 됨 
print('[%0.2f]' %3.14657654)
print('[%0.2f]' %3.14157654)
#나누기 <-> 조인 
a='sdkjcnolnclcnsdl'
b=','
c=b.join(a)
print(c)
#구분자 ,를 기준으로 c문자열을 나누겠다
print(c.split(','))
url="http:/.google.com/img/a.jpg"
print(url.split('/'))
print(url.count('/'))
print(url.split('/')[3])

#포맷팅 + 치환식 + 자리수  -k를 추가
a='123{0}456'.format("K")
print(a)

#자리수 열 개 
a='123{0:<10}456'.format("K")
print(a)
a='123{0:>10}456'.format("K")
print(a)
#k를 가운데 열자리
a='123{0:^10}456'.format("K")
print(a)
a='123{0:*^10}456'.format("K") #공백 채우기


